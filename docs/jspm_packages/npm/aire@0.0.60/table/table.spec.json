[
  {
    "tags": [],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "line": 1,
    "codeStart": null,
    "code": "import 'reflect-metadata';\nimport 'aurelia-polyfills';\n\nimport {bootstrap}      from 'aurelia-bootstrapper';\nimport {newComponent}         from \"test/render\";\n\n\nlet component : any;\n\n\nfunction initialize(bindingContext : any, templateString ?: string) {\n    let template = templateString ? templateString : `\n  aire-table\n  `;\n    component = newComponent(template, bindingContext, 'table/table');\n}\n\nafterEach(() => {\n    component.dispose();\n});\n\ntest(\"a table should initialize\", async (done) => {\n    initialize({});\n    await component.create(bootstrap);\n    let table = document.querySelector('table.uk-table');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can have a caption\", async(done) => {\n    initialize({caption: \"My Table\"}, `\naire-table(caption.bind=\"caption\")\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table caption');\n    expect(table).toBeTruthy();\n    expect(table.textContent).toBe(\"My Table\");\n    done();\n});\n\ntest(\"a table can have a header\", async(done) => {\n    initialize({}, `\naire-table(header)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table thead');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can have a footer\", async(done) => {\n    initialize({}, `\naire-table(footer)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table tfoot');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can take a divider argument\", async(done) => {\n    initialize({}, `\naire-table(divider)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table.uk-table-divider');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can take a striped argument\", async(done) => {\n    initialize({}, `\naire-table(striped)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table.uk-table-striped');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can take a hover argument\", async(done) => {\n    initialize({}, `\naire-table(hover)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table.uk-table-hover');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can take a justify argument\", async(done) => {\n    initialize({}, `\naire-table(justify)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table.uk-table-justify');\n    expect(table).toBeTruthy();\n    done();\n});\n\ntest(\"a table can take a middle argument\", async(done) => {\n    initialize({}, `\naire-table(middle)\n  `);\n    await component.create(bootstrap);\n    let table = document.querySelector('.uk-table.uk-table-middle');\n    expect(table).toBeTruthy();\n    done();\n});",
    "ctx": false
  }
]