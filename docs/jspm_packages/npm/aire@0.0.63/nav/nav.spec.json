[
  {
    "tags": [],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "line": 1,
    "codeStart": null,
    "code": "import 'reflect-metadata';\nimport 'aurelia-polyfills';\n\nimport {bootstrap}      from 'aurelia-bootstrapper';\nimport {newComponent}         from \"test/render\";\n\n\nlet component : any;\n\n\nfunction initialize(bindingContext : any, templateString ?: string) {\n    let template = templateString ? templateString : `\n  aire-nav(router.bind=\"router\")\n  `;\n    component = newComponent(template, bindingContext, 'nav/nav');\n}\n\nafterEach(() => {\n    component.dispose();\n});\n\ntest(\"a nav should initialize\", async (done) => {\n    initialize({});\n    await component.create(bootstrap);\n    let nav = document.querySelector('ul.uk-nav');\n    expect(nav).toBeTruthy();\n    done();\n});\n\ntest(\"a nav can take a default argument\", async(done) => {\n    initialize({}, `\naire-nav(default)\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-nav.uk-nav-default');\n    expect(nav).toBeTruthy();\n    done();\n});\n\ntest(\"a nav can take a primary argument\", async(done) => {\n    initialize({}, `\naire-nav(primary)\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-nav.uk-nav-primary');\n    expect(nav).toBeTruthy();\n    done();\n});\n\ntest(\"a nav can take a center argument\", async(done) => {\n    initialize({}, `\naire-nav(center)\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-nav.uk-nav-center');\n    expect(nav).toBeTruthy();\n    done();\n});",
    "ctx": false
  }
]