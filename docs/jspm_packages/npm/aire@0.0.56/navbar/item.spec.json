[
  {
    "tags": [],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "line": 1,
    "codeStart": null,
    "code": "import 'reflect-metadata';\nimport 'aurelia-polyfills';\n\nimport {bootstrap}      from 'aurelia-bootstrapper';\nimport {newComponent}         from \"test/render\";\n\n\nlet component : any;\n\n\nfunction initialize(bindingContext : any, templateString ?: string) {\n    let template = templateString ? templateString : `\naire-navbar\n  navbar-section\n    navbar-item\n  `;\n    component = newComponent(template, bindingContext, 'navbar/navbar', 'navbar/section', 'navbar/item', 'icon/icon');\n}\n\nafterEach(() => {\n    component.dispose();\n});\n\ntest(\"an item should initialize\", async (done) => {\n    initialize({}, `\naire-navbar\n  navbar-section\n    navbar-item\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-navbar-item');\n    expect(nav).toBeTruthy();\n    done();\n});\n\ntest(\"an item should initialize with a slot\", async (done) => {\n    initialize({}, `\naire-navbar\n  navbar-section\n    navbar-item\n        p heck\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-navbar-item p');\n    expect(nav).toBeTruthy();\n    expect(nav.textContent).toBe(\"heck\");\n    done();\n});\n\ntest.skip(\"an item can take an icon\", async (done) => {\n    initialize({}, `\naire-navbar\n  navbar-section\n    navbar-item(icon.bind=\"pencil\")\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-navbar-item .aire-icon');\n    expect(nav).toBeTruthy();\n    expect(nav.classList.contains(\"pencil\")).toBeTruthy();\n    done();\n});\n\ntest(\"an item can be active\", async (done) => {\n    initialize({}, `\naire-navbar\n  navbar-section\n    navbar-item(active)\n  `);\n    await component.create(bootstrap);\n    let nav = document.querySelector('.uk-navbar-item.uk-active');\n    expect(nav).toBeTruthy();\n    done();\n});",
    "ctx": false
  }
]